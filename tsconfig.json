{
  "compilerOptions": {
    "target": "ESNext", // target用于指定编译之后的版本目录
    "jsx": "preserve", // 是否在表达式和声明上有隐含的any类型时报错
    /**
     TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,
    如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入"ES2019.Array"
     *
     */
    "lib": [
      "ESNext",
      "DOM",
      "DOM.Iterable"
    ],
    "useDefineForClassFields": true,
    "baseUrl": "./",
    "module": "ESNext", // 指定生成代码的模板标准
    "moduleResolution": "Bundler", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入
    "paths": {
      // 路径映射，相对于baseUrl
      "@/*": [
        "src/*"
      ],
      "#/*": [
        "src/types/*"
      ]
    },
    "resolveJsonModule": true,
    "types": [
      "vite/client",
      "vite-plugin-pages/client",
      "vite-plugin-vue-meta-layouts/client",
      "element-plus/global"
    ],
    "allowImportingTsExtensions": true,
    "allowJs": false,
    "strict": true,
    "strictNullChecks": true,
    "noImplicitAny": false,
    "noUnusedLocals": false,
    "noEmit": true,
    "sourceMap": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ], // 排除src目录下的lib文件夹下的文件不会编译
  "files": [],
  // 指定编译需要编译的文件或目录。
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue"
  ],
  "exclude": [
    "dist",
    "node_modules",
    "**/*.js",
    "packages"
  ]
}
